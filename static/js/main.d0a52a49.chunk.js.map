{"version":3,"sources":["components/AccountAvatar.js","hooks/useWindowSize.js","components/ProfileImage.js","components/ProfileDrawer.js","components/Header.js","components/Loading.js","components/BooksList.js","components/NotesList.js","components/Note.js","screens/Home/Home.js","screens/Authentication.js","screens/Logout.js","screens/Book.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/themeReducer.js","store/reducers/index.js","index.js"],"names":["Wrapper","styled","div","Title","AccountAvatar","props","name","onClick","UserOutlined","useWindowSize","isClient","window","getSize","width","innerWidth","undefined","height","innerHeight","useState","windowSize","setWindowSize","useEffect","handleResize","addEventListener","removeEventListener","Image","img","size","ProfileImage","src","Text","Typography","LogoutWraper","ProfileDrawer","onClose","closable","placement","visible","history","useHistory","style","marginTop","align","span","push","fontSize","marginRight","cursor","LogoutOutlined","display","justifyContent","marginBottom","strong","BaseHeader","Header","drawer","setDrawer","drawerSize","drawerClose","margin","fontFamily","fontWeight","level","ScalingTransition","Loading","Meta","Card","BooksList","useFirebaseConnect","path","uid","useSelector","state","firebase","auth","data","store","ordered","userBooks","Object","keys","books","length","filter","key","value","includes","justify","textAlign","gutter","xs","sm","md","lg","map","IBAN","title","imageURL","pages","hoverable","cover","alt","description","notes","note","NotesList","userBooksPages","pagesArray","reduce","pgArray","console","log","loading","itemLayout","dataSource","renderItem","slice","notedummy","Paragraph","Note","toUpperCase","danger","editable","Content","Layout","Home","useFirebase","padding","minHeight","Authentication","uiConfig","signInFlow","signInSuccessUrl","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","callbacks","signInSuccessWithAuthResult","authResult","redirectUrl","handleRedirectResult","then","additionalUserInfo","isNewUser","displayName","user","updateProfile","fullname","credentialHelper","firebaseui","CredentialHelper","NONE","uiCallback","ui","firebaseAuth","Logout","logout","Book","match","params","bookId","background","borderBottom","subTitle","onBack","goBack","extra","component","exact","App","profile","isLoaded","isEmpty","to","Boolean","location","hostname","initialState","PRIMARY","SECONDARY","TYPOGRAPHY","HEADING","themes","themesMap","label","combineReducers","action","type","firebaseReducer","theme","payload","newTheme","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","createStore","reducer","composeWithDevTools","rrfProps","config","userProfile","dispatch","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d0a52a49.chunk.js","sourcesContent":["import React from 'react';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    font-size: 24px;\r\n    cursor: pointer;\r\n    display: flex;\r\n    align-items: center;\r\n`;\r\n\r\nconst Title = styled.div`\r\n    margin-right: 8px;\r\n`;\r\n\r\nfunction AccountAvatar(props) {\r\n    const { name } = props;\r\n    return (\r\n        <Wrapper onClick={props.onClick}>\r\n            <Title>{name}</Title>\r\n            <UserOutlined />\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default AccountAvatar;\r\n","// https://usehooks.com/useWindowSize/\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction useWindowSize() {\r\n    const isClient = typeof window === 'object';\r\n\r\n    function getSize() {\r\n        return {\r\n            width: isClient ? window.innerWidth : undefined,\r\n            height: isClient ? window.innerHeight : undefined,\r\n        };\r\n    }\r\n\r\n    const [windowSize, setWindowSize] = useState(getSize);\r\n\r\n    useEffect(() => {\r\n        if (!isClient) {\r\n            return false;\r\n        }\r\n\r\n        function handleResize() {\r\n            setWindowSize(getSize());\r\n        }\r\n\r\n        window.addEventListener('resize', handleResize);\r\n        return () => window.removeEventListener('resize', handleResize);\r\n        // eslint-disable-next-line\r\n    }, []); // Empty array ensures that effect is only run on mount and unmount\r\n\r\n    return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Image = styled.img`\r\n    ${({ size }) =>\r\n        size === 'small' &&\r\n        `\r\n        width : 150px;\r\n        height: 150px;\r\n        border-radius : 75px;\r\n        border : solid 3px gray;\r\n\r\n        @media only screen and (max-width: 600px) {\r\n              width : 100px;\r\n        height: 100px;\r\n        border-radius : 50px;\r\n        border : solid 3px gray;\r\n        }\r\n    `}\r\n`;\r\n\r\nfunction ProfileImage({ src, size = 'small' }) {\r\n    return <Image src={src} size={size} />;\r\n}\r\n\r\nexport default ProfileImage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Drawer, Row, Col, Typography } from 'antd';\r\nimport { LogoutOutlined } from '@ant-design/icons';\r\nimport ProfileImage from './ProfileImage';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst LogoutWraper = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`;\r\n\r\nfunction ProfileDrawer(props) {\r\n    const { onClose, closable, placement, visible, width } = props;\r\n    let history = useHistory();\r\n\r\n    return (\r\n        <Drawer\r\n            placement={placement}\r\n            closable={closable}\r\n            onClose={onClose}\r\n            visible={visible}\r\n            width={width}\r\n        >\r\n            <Row\r\n                style={{ marginTop: closable ? '30px' : '0px' }}\r\n                align={'middle'}\r\n            >\r\n                <Col span={24} align={'end'}>\r\n                    <LogoutWraper\r\n                        onClick={() => {\r\n                            history.push('/logout');\r\n                        }}\r\n                    >\r\n                        <div\r\n                            style={{\r\n                                fontSize: '20px',\r\n                                marginRight: '5px',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            Logout\r\n                        </div>\r\n                        <LogoutOutlined\r\n                            style={{ fontSize: '30px', cursor: 'pointer' }}\r\n                        />\r\n                    </LogoutWraper>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <div\r\n                        style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            marginBottom: '5px',\r\n                        }}\r\n                    >\r\n                        <ProfileImage\r\n                            src={\r\n                                'https://images.pexels.com/photos/220453/pexels-photo-220453.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500'\r\n                            }\r\n                        />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row style={{ marginTop: '10px' }}>\r\n                <Col span={8} style={{ fontSize: 'large' }}>\r\n                    <Text strong={true}>Full Name: </Text>\r\n                </Col>\r\n                <Col span={16} style={{ fontSize: 'large' }}>\r\n                    <Text>Saad Awan</Text>\r\n                </Col>\r\n                <Col span={8} style={{ fontSize: 'large' }}>\r\n                    <Text strong={true}>Institute: </Text>\r\n                </Col>\r\n                <Col span={16} style={{ fontSize: 'large' }}>\r\n                    <Text>National University of Science and Technology</Text>\r\n                </Col>\r\n                <Col span={8} style={{ fontSize: 'large' }}>\r\n                    <Text strong={true}>Class of: </Text>\r\n                </Col>\r\n                <Col span={16} style={{ fontSize: 'large' }}>\r\n                    <Text>2023</Text>\r\n                </Col>\r\n            </Row>\r\n        </Drawer>\r\n    );\r\n}\r\n\r\nexport default ProfileDrawer;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Typography, Drawer } from 'antd';\r\nimport styled from 'styled-components';\r\nimport Avatar from './AccountAvatar';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport useWindowSize from '../hooks/useWindowSize';\r\n\r\nimport ProfileDrawer from './ProfileDrawer';\r\n\r\nconst { Title } = Typography;\r\n\r\nconst BaseHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin: 0;\r\n    padding: 5px 10px;\r\n    background: white;\r\n    border-bottom: solid 2px #dadada;\r\n`;\r\n\r\nconst Header = (props) => {\r\n    const [drawer, setDrawer] = useState(false);\r\n    const window = useWindowSize();\r\n\r\n    let drawerSize = '100%';\r\n    let drawerClose = true;\r\n    if (window) {\r\n        if (window.width > 1100) {\r\n            drawerSize = '30%';\r\n            drawerClose = false;\r\n        } else if (window.width > 780) {\r\n            drawerSize = '50%';\r\n            drawerClose = false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <BaseHeader>\r\n                        <Title\r\n                            style={{\r\n                                margin: '0',\r\n                                fontFamily: 'Piedra, cursive',\r\n                                fontWeight: 'lighter',\r\n                            }}\r\n                            level={2}\r\n                        >\r\n                            AR Study\r\n                        </Title>\r\n                        <Avatar\r\n                            onClick={() => setDrawer(true)}\r\n                            name={'Saad A.'}\r\n                        />\r\n                    </BaseHeader>\r\n                </Col>\r\n            </Row>\r\n            <ProfileDrawer\r\n                placement=\"right\"\r\n                closable={drawerClose}\r\n                onClose={() => setDrawer(false)}\r\n                visible={drawer}\r\n                width={drawerSize}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Spin, Space } from 'antd';\r\n\r\nconst ScalingTransition = styled.div`\r\n    animation-name: beautiful;\r\n    animation-duration: 2s;\r\n    animation-iteration-count: infinite;\r\n\r\n    @keyframes beautiful {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        50% {\r\n            transform: scale(2);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nfunction Loading(props) {\r\n    return (\r\n        <Wrapper>\r\n            <ScalingTransition>\r\n                <Space size=\"middle\">\r\n                    <Spin size=\"large\" />\r\n                </Space>\r\n            </ScalingTransition>\r\n        </Wrapper>\r\n    );\r\n}\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Typography, Row, Col, Card } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFirebaseConnect } from 'react-redux-firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport useWindowSize from '../hooks/useWindowSize';\r\n\r\nimport Loading from './Loading';\r\n\r\nconst { Meta } = Card;\r\n\r\nconst { Title } = Typography;\r\n\r\nconst list = [\r\n    {\r\n        IBAN: '895-453-34-4',\r\n        imageUrl:\r\n            'https://firebasestorage.googleapis.com/v0/b/arstudy-d71ad.appspot.com/o/book_cover_images%2F792EAA9B-8180-469A-8AA2-3D2C750BCA77?alt=media&token=f1a79345-498e-42a2-81ec-f384337bbc23',\r\n        pages: 247,\r\n        title: 'IGCSE Biology',\r\n    },\r\n    {\r\n        IBAN: '123-232-23-22',\r\n        imageUrl:\r\n            'https://cdn.pastemagazine.com/www/system/images/photo_albums/best-book-covers-july-2019/large/bbcjuly19verynice.jpg?1384968217',\r\n        pages: 147,\r\n        title: 'Very Nice - by Marcy Denmarchy',\r\n    },\r\n    {\r\n        IBAN: '222-432-53-22',\r\n        imageUrl:\r\n            'https://2.bp.blogspot.com/-fZoGdYQxf1M/TgvWYwPtA2I/AAAAAAAAJI0/1YQZfEFPN4A/s1600/A%252BGame%252Bof%252BThrones.jpg',\r\n        pages: 347,\r\n        title: 'A Games of Thrones - by George Martin',\r\n    },\r\n];\r\n\r\nconst BooksList = (props) => {\r\n    useFirebaseConnect([{ path: 'user-book-pages' }, { path: 'books' }]);\r\n    const window = useWindowSize();\r\n    const history = useHistory();\r\n\r\n    const uid = useSelector((state) => state.firebase?.auth?.uid);\r\n\r\n    const data = useSelector((store) => store.firebase.data);\r\n    const ordered = useSelector((store) => store.firebase.ordered);\r\n\r\n    if (!data || !data['user-book-pages'] || !data['books']) {\r\n        return <Loading />;\r\n    }\r\n\r\n    const userBooks = data['user-book-pages']?.[`${uid}`]\r\n        ? Object.keys(data['user-book-pages'][`${uid}`])\r\n        : [];\r\n\r\n    const books =\r\n        userBooks.length > 0\r\n            ? ordered.books.filter(({ key, value }) => {\r\n                  if (userBooks.includes(`${key}`)) {\r\n                      return true;\r\n                  } else return false;\r\n              })\r\n            : [];\r\n\r\n    let justify = 'start';\r\n\r\n    if (window) {\r\n        if (window.width < 600) {\r\n            justify = 'center';\r\n        }\r\n    }\r\n\r\n    justify = 'start';\r\n\r\n    return (\r\n        <>\r\n            <Title style={{ textAlign: justify }}>My Library</Title>\r\n            <Row\r\n                gutter={[\r\n                    { xs: 10, sm: 10, md: 20, lg: 30 },\r\n                    { xs: 10, sm: 10, md: 15, lg: 15 },\r\n                ]}\r\n                justify={justify}\r\n            >\r\n                {books.map(\r\n                    ({ key, value: { IBAN, title, imageURL, pages } }) => {\r\n                        return (\r\n                            <Col lg={{ span: 6 }} key={key}>\r\n                                <Card\r\n                                    hoverable\r\n                                    style={{ width: 200 }}\r\n                                    cover={\r\n                                        <img alt=\"book cover\" src={imageURL} />\r\n                                    }\r\n                                    onClick={() => {\r\n                                        history.push('/books/:324322q4qgresf3');\r\n                                    }}\r\n                                >\r\n                                    <Meta\r\n                                        title={title}\r\n                                        description={`${pages} pages`}\r\n                                    />\r\n                                    <Meta title={`IBAN: ${IBAN}`} />\r\n                                </Card>\r\n                            </Col>\r\n                        );\r\n                    }\r\n                )}\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BooksList;\r\n","import React from 'react';\r\nimport { List, Skeleton, Typography, Card } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useFirebaseConnect, populate } from 'react-redux-firebase';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Loading from './Loading';\r\n\r\nconst notes = [\r\n    {\r\n        title: 'page-10',\r\n        note: 'This is really an aweomse man. So detailed concept matter',\r\n    },\r\n    {\r\n        title: 'page-21',\r\n        note: `It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).`,\r\n    },\r\n    {\r\n        title: 'page-22',\r\n        note: `Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\r\nThe standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.`,\r\n    },\r\n];\r\n\r\nconst { Text } = Typography;\r\n\r\nfunction NotesList(props) {\r\n    const uid = useSelector((state) => state.firebase?.auth?.uid);\r\n    useFirebaseConnect([\r\n        {\r\n            path: `user-book-pages/${uid}`,\r\n        },\r\n    ]);\r\n    let history = useHistory();\r\n\r\n    const userBooksPages = useSelector(\r\n        (store) => store.firebase.ordered['user-book-pages']\r\n    );\r\n\r\n    if (!userBooksPages || !userBooksPages[`${uid}`]) return <Loading />;\r\n\r\n    let pagesArray = userBooksPages[`${uid}`].reduce((pgArray, { value }) => {\r\n        // value is object of keys of pages;\r\n        return [...pgArray, ...Object.keys(value)];\r\n    }, []);\r\n\r\n    console.log(pagesArray);\r\n\r\n    //  const userBooks = data['user-book-pages']?.[`${uid}`]\r\n\r\n    //  const books =\r\n    //      userBooks.length > 0\r\n    //          ? ordered.books.filter(({ key, value }) => {\r\n    //                if (userBooks.includes(`${key}`)) {\r\n    //                    return true;\r\n    //                } else return false;\r\n    //            })\r\n    //          : [];\r\n\r\n    return (\r\n        <List\r\n            loading={false}\r\n            itemLayout=\"horizontal\"\r\n            // loadMore={loadMore}\r\n            dataSource={notes}\r\n            renderItem={({ title, note }) => (\r\n                <Card\r\n                    loading={false}\r\n                    hoverable={true}\r\n                    style={{ marginBottom: '10px' }}\r\n                    onClick={() => {\r\n                        history.push('/books/:boodId/notes/noteId');\r\n                    }}\r\n                >\r\n                    <Card.Meta\r\n                        title={title}\r\n                        description={\r\n                            note.length > 280\r\n                                ? `${note.slice(0, 280)} ...`\r\n                                : note\r\n                        }\r\n                    />\r\n                </Card>\r\n\r\n                // <List.Item\r\n                //     style={{\r\n                //         background: 'white',\r\n                //         padding: '10px',\r\n                //         margin: '10px 0px',\r\n                //     }}\r\n                //     // actions={[<a key=\"list-loadmore-edit\">edit</a>, <a key=\"list-loadmore-more\">more</a>]}\r\n                // >\r\n                //     <Skeleton avatar title={false} loading={false} active>\r\n                //         <List.Item.Meta\r\n                //             title={title}\r\n                //             description={\r\n                //                 note.length > 280\r\n                //                     ? `${note.slice(0, 280)} ...`\r\n                //                     : note\r\n                //             }\r\n                //         />\r\n                //         {/* <Text ellipsis={true}>{`${title}: ${note}`}</Text> */}\r\n                //     </Skeleton>\r\n                // </List.Item>\r\n            )}\r\n        />\r\n    );\r\n}\r\n\r\nexport default NotesList;\r\n","import React from 'react';\r\nimport { Typography, Row, Col, Button } from 'antd';\r\n\r\nconst notedummy = {\r\n    note: `Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.\r\n\r\nThe standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from \"de Finibus Bonorum et Malorum\" by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.`,\r\n    title: 'page-21',\r\n};\r\n\r\nconst { Title, Paragraph } = Typography;\r\n\r\nfunction Note(props) {\r\n    const { title, note } = notedummy;\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col span={18}>\r\n                    <Title>{title.toUpperCase()}</Title>\r\n                </Col>\r\n                <Col span={6} align=\"end\">\r\n                    <Button danger>Delete</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col span={24}>\r\n                    <Paragraph style={{ fontSize: 'medium' }} editable={true}>\r\n                        {note}\r\n                    </Paragraph>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Note;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useFirebase, isLoaded, isEmpty } from 'react-redux-firebase';\r\nimport { Button, Layout } from 'antd';\r\nimport { Header, BooksList } from '../../components';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst Home = (props) => {\r\n    const firebase = useFirebase();\r\n    return (\r\n        <>\r\n            <Header />\r\n            <Content\r\n                style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 280,\r\n                }}\r\n            >\r\n                <BooksList />\r\n            </Content>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFirebase } from 'react-redux-firebase';\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\r\nimport * as firebaseui from 'firebaseui';\r\n// import { useHistory } from 'react-router-dom'; // if you use react-router\r\n// import GoogleButton from 'react-go3ogle-button' // optional\r\n\r\nfunction Authentication() {\r\n    const firebase = useFirebase();\r\n    const auth = useSelector((state) => state.firebase.auth);\r\n\r\n    return (\r\n        <div>\r\n            <StyledFirebaseAuth\r\n                uiConfig={{\r\n                    signInFlow: 'popup',\r\n                    signInSuccessUrl: '/',\r\n                    signInOptions: [\r\n                        {\r\n                            provider:\r\n                                firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n                        },\r\n                    ],\r\n                    callbacks: {\r\n                        signInSuccessWithAuthResult: (\r\n                            authResult,\r\n                            redirectUrl\r\n                        ) => {\r\n                            firebase\r\n                                .handleRedirectResult(authResult)\r\n                                .then(() => {\r\n                                    // history.push(redirectUrl); if you use react router to redirect\r\n\r\n                                    if (\r\n                                        authResult.additionalUserInfo\r\n                                            .isNewUser === true\r\n                                    ) {\r\n                                        // performm necessary profile updates here;\r\n                                        let { displayName } = authResult.user;\r\n                                        firebase.updateProfile({\r\n                                            fullname: displayName,\r\n                                        });\r\n                                    }\r\n                                });\r\n                            return false;\r\n                        },\r\n                    },\r\n                    credentialHelper: firebaseui.auth.CredentialHelper.NONE,\r\n                }}\r\n                uiCallback={(ui) => console.log(ui)}\r\n                firebaseAuth={firebase.auth()}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Authentication;\r\n","import React, { useEffect } from 'react';\r\nimport { useFirebase, isLoaded, isEmpty } from 'react-redux-firebase';\r\n\r\nfunction Logout(props) {\r\n    const firebase = useFirebase();\r\n    useEffect(() => {\r\n        firebase.logout();\r\n    }, []);\r\n    return <h1>Byebye</h1>;\r\n}\r\n\r\nexport default Logout;\r\n","import React, { useState } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { PageHeader, Layout, Typography } from 'antd';\r\nimport ProfileDrawer from '../components/ProfileDrawer';\r\nimport Avatar from '../components/AccountAvatar';\r\nimport useWindowSize from '../hooks/useWindowSize';\r\n\r\nimport NotesList from '../components/NotesList';\r\nimport Note from '../components/Note';\r\n\r\nconst { Content } = Layout;\r\nconst { Title } = Typography;\r\n\r\nfunction Book(props) {\r\n    const { match, history } = props;\r\n    const bookId = match?.params?.bookId;\r\n    const [drawer, setDrawer] = useState(false);\r\n    const window = useWindowSize();\r\n\r\n    let drawerSize = '100%';\r\n    let drawerClose = true;\r\n    if (window) {\r\n        if (window.width > 1100) {\r\n            drawerSize = '30%';\r\n            drawerClose = false;\r\n        } else if (window.width > 780) {\r\n            drawerSize = '50%';\r\n            drawerClose = false;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <PageHeader\r\n                title={'Book Title'}\r\n                style={{\r\n                    padding: '2px 10px',\r\n                    background: 'white',\r\n                    borderBottom: 'solid 2px #dadada',\r\n                }}\r\n                subTitle={'Notes'}\r\n                onBack={() => history.goBack()}\r\n                extra={[\r\n                    <Avatar onClick={() => setDrawer(true)} name={'Saad A.'} />,\r\n                ]}\r\n            ></PageHeader>\r\n            <Content\r\n                style={{\r\n                    padding: 24,\r\n                    margin: 0,\r\n                    minHeight: 280,\r\n                    background: 'whitesmoke',\r\n                }}\r\n            >\r\n                <Route path=\"/books/:bookId/notes/:noteId\" component={Note} />\r\n                <Route\r\n                    path={'/books/:bookid'}\r\n                    exact={true}\r\n                    component={() => (\r\n                        <>\r\n                            <Title>Notes</Title>\r\n                            <NotesList />\r\n                        </>\r\n                    )}\r\n                />\r\n            </Content>\r\n            <ProfileDrawer\r\n                placement=\"right\"\r\n                closable={drawerClose}\r\n                onClose={() => setDrawer(false)}\r\n                visible={drawer}\r\n                width={drawerSize}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Book;\r\n","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Redirect,\n} from 'react-router-dom';\nimport { Home, Authentication, Logout, Book } from './screens';\nimport { Loading } from './components';\nimport { useSelector } from 'react-redux';\n\nconst App = (props) => {\n    const { isLoaded, isEmpty } = useSelector(\n        (state) => state.firebase.profile\n    );\n\n    if (!isLoaded) {\n        return <Loading />;\n    }\n\n    if (isEmpty) {\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/signup\" component={() => <h1>Singup</h1>} />\n                    <Route path=\"/login\" component={Authentication} />\n                    <Redirect path=\"/\" to=\"/login\" />\n                </Switch>\n            </Router>\n        );\n    }\n\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/logout\" component={Logout} />\n                <Route path=\"/dashboard\" component={Home} />\n                <Route path={'/books/:bookId'} component={Book} />\n                <Redirect path=\"/\" to=\"/dashboard\" />\n            </Switch>\n        </Router>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    user: null,\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n    PRIMARY: '#00DDFF',\r\n    SECONDARY: '#0049B7',\r\n    TYPOGRAPHY: 'gray',\r\n    HEADING: 'black',\r\n};\r\n\r\nconst themes = {};\r\n\r\nconst themesMap = (label) => {\r\n    return themes[label];\r\n};\r\n\r\nexport default function themeReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'CHANGE_THEME':\r\n            const { label } = action.payload;\r\n            const newTheme = themesMap(label);\r\n            return newTheme;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport authReducer from './authReducer';\r\nimport themeReducer from './themeReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    firebase: firebaseReducer,\r\n    theme: themeReducer,\r\n});\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase';\nimport reducer from './store/reducers';\n\n// firebase config;\n\nconst fbConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n};\n\n// react-redux-firebase config;\nconst rrfConfig = {\n    userProfile: 'users',\n};\n\nfirebase.initializeApp(fbConfig);\n\nconst initialState = {};\n\nconst store = createStore(\n    reducer,\n    initialState,\n    composeWithDevTools()\n    // applyMiddleware(...middleware)\n    // other store enhancers if any\n);\n\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n};\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <App />\n            </ReactReduxFirebaseProvider>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}